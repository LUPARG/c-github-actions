name: "Clone Private Repo"
description: "Clone Private Repo"

inputs:
  github-deploy-key:
    description: "GitHub Deploy Key"
    required: false
  repository:
    description: "Repository, eg: git@github.com:LUPARG/c-k8s-helm-chart.git"
    required: true
  repository-tag:
    description: "Repository tag, eg: 1.0.121"
    required: true
  clone-path:
    description: "Path"
    required: true
  extra-commands:
    description: "Eg: rm -r ./devops/argocd/k8s-helm-chart/.git"
    required: true

runs:
  using: "composite"
  steps:
    - name: Clone Private Repo
      shell: bash
      id: clone-private-repo
      env:
        GITHUB_DEPLOY_KEY: ${{ inputs.github-deploy-key }}
        REPOSITORY: ${{ inputs.repository }}
        REPOSITORY_TAG: ${{ inputs.repository-tag }}
        CLONE_PATH: ${{ inputs.clone-path }}
        EXTRA_COMMANDS: ${{ inputs.extra-commands }}
      run: |
        # add deploy key to ssh agent
        eval `ssh-agent -s`
         
        # USE INPUTS DIRECTLY TO AVOID ENV VAR TO MESS UP WITH KEY FORMAT
        if [ -z "${GITHUB_DEPLOY_KEY}" ]; then
          echo "GITHUB_DEPLOY_KEY is empty"
        else
          echo "GITHUB_DEPLOY_KEY isn't empty"
          echo ${{ inputs.github-deploy-key }}
          cat "${{ inputs.github-deploy-key }}" | ssh-add -
          #ssh-add - <<< "${{ inputs.github-deploy-key }}"
        fi
        # git clone
        git clone --depth 1 --branch $REPOSITORY_TAG $REPOSITORY $CLONE_PATH

        # CLEAN UP
        $EXTRA_COMMANDS
